name: Auto Version Bump

on:
  issue_comment:
    types: [created]

jobs:
  bump-version:
    # Only run on PR comments that say /bump-version
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/bump-version')
    runs-on: macos-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Wait for running workflows
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const headSha = pr.data.head.sha;

            // Wait for all workflows on this commit to complete
            let attempts = 0;
            const maxAttempts = 60; // 5 minutes max wait

            while (attempts < maxAttempts) {
              const runs = await github.rest.actions.listWorkflowRunsForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head_sha: headSha,
                per_page: 100
              });

              const runningWorkflows = runs.data.workflow_runs.filter(run =>
                run.status === 'in_progress' || run.status === 'queued'
              );

              if (runningWorkflows.length === 0) {
                console.log('All workflows completed');
                break;
              }

              console.log(`Waiting for ${runningWorkflows.length} workflow(s) to complete...`);
              await new Promise(resolve => setTimeout(resolve, 5000)); // Wait 5 seconds
              attempts++;
            }

            if (attempts >= maxAttempts) {
              core.setFailed('Timeout waiting for workflows to complete');
            }

      - name: Get PR branch
        id: get-branch
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            return pr.data.head.ref;
          result-encoding: string

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.get-branch.outputs.result }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump version
        run: |
          # Get current version
          CURRENT_VERSION=$(grep "__version__" _version.py | sed "s/__version__ = '\([^']*\)'/\1/")

          # Parse version (assuming semantic versioning: major.minor.patch)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"

          # Update _version.py
          sed -i '' "s/__version__ = '$CURRENT_VERSION'/__version__ = '$NEW_VERSION'/" _version.py

          echo "Bumped version from $CURRENT_VERSION to $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        id: bump

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add _version.py
          git commit -m "Bump version to ${{ steps.bump.outputs.new_version }}"
          git push

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `Version bumped to ${{ steps.bump.outputs.new_version }}`
            });
