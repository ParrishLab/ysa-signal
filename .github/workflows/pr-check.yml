name: PR Version Check

on:
  pull_request:
    branches: [main]

jobs:
  version-check:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if version changed
        run: |
          # Get current version
          CURRENT_VERSION=$(grep "__version__" _version.py | sed "s/__version__ = '\([^']*\)'/\1/")

          # Get version from main branch
          git fetch origin main
          MAIN_VERSION=$(git show origin/main:_version.py | grep "__version__" | sed "s/__version__ = '\([^']*\)'/\1/")

          echo "Current PR version: $CURRENT_VERSION"
          echo "Main branch version: $MAIN_VERSION"

          if [ "$CURRENT_VERSION" == "$MAIN_VERSION" ]; then
            echo "Error: Version has not been updated in _version.py"
            echo "Please update the version before merging this PR"
            exit 1
          else
            echo "Version updated from $MAIN_VERSION to $CURRENT_VERSION"
          fi

  tests:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if we should run tests
        id: should-test
        run: |
          # Get list of changed files
          git fetch origin main
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)

          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Check if only _version.py changed
          if [ "$(echo "$CHANGED_FILES" | wc -l | tr -d ' ')" -eq 1 ] && echo "$CHANGED_FILES" | grep -q "^_version.py$"; then
            echo "Only _version.py changed, skipping tests"
            echo "run_tests=false" >> $GITHUB_OUTPUT
          else
            echo "Code changes detected, running tests"
            echo "run_tests=true" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python
        if: steps.should-test.outputs.run_tests == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies and run tests
        if: steps.should-test.outputs.run_tests == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install pytest numpy h5py pybind11
          pytest
